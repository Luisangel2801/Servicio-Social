[
    {
        "id": "1f5375476a453e73",
        "type": "tab",
        "label": "Telegram",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "303d27a63839067b",
        "type": "telegram receiver",
        "z": "1f5375476a453e73",
        "name": "Mensaje Recibido",
        "bot": "dd1eda5eaf1864d8",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 170,
        "y": 600,
        "wires": [
            [
                "7329b2461798be32",
                "ece408d79f66033e"
            ],
            []
        ]
    },
    {
        "id": "5ccabd2c0e39631a",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Mensaje de bienvenida",
        "func": "let mensaje = \"*Enviar los siguientes datos en un solo mensaje separados por saltos de linea:*\\r\\n\" +\n\"Nombre:\\r\\n\" + \n\"Apellido Paterno:\\r\\n\" + \n\"Apellido Materno:\\r\\n\" + \n\"Edificio:\\r\\n\" + \n\"Cubiculo:\";\n\nlet id = msg.payload.chatId;\n\nmsg.payload = {\n    chatId : id, \n    type : \"message\", \n    content : mensaje\n};\nmsg.payload.options = {\n    disable_web_page_preview : true, \n    parse_mode : \"Markdown\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 360,
        "wires": [
            [
                "0e849e92bd2a0943"
            ]
        ]
    },
    {
        "id": "7329b2461798be32",
        "type": "switch",
        "z": "1f5375476a453e73",
        "name": "",
        "property": "payload.content",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/borrar",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "/",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 600,
        "wires": [
            [
                "5ccabd2c0e39631a"
            ],
            [
                "46e7c507468e84e1"
            ],
            [
                "b0b456f3bba9499c"
            ]
        ]
    },
    {
        "id": "0e849e92bd2a0943",
        "type": "telegram sender",
        "z": "1f5375476a453e73",
        "name": "Notifica el mensaje de bienvenida",
        "bot": "dd1eda5eaf1864d8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1100,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b0b456f3bba9499c",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Mensajes para el registro",
        "func": "let content = msg.payload.content;\nlet chatId = msg.payload.chatId;\n\ntry {\n    if (typeof content !== 'string') {\n        throw new Error('La entrada debe ser una cadena de texto');\n    }\n\n    const lineas = content.split('\\n').map(linea => linea.trim());\n\n    if (lineas.length < 5) {\n        throw new Error('Faltan datos en la entrada.');\n    }\n\n    let cubiculo_entero = parseInt(lineas[4], 10);\n\n    // Creamos el objeto con los datos procesados\n    let datosProcessados = {\n        nombre: lineas[0] || 'Sin nombre',\n        apellidoPaterno: lineas[1] || 'Sin apellido paterno',\n        apellidoMaterno: lineas[2] || 'Sin apellido materno',\n        edificio: lineas[3] || 'Sin edificio',\n        cubiculo: cubiculo_entero,\n        id_Telegram: chatId\n    };\n\n    // Guardamos en payload para la consulta SQL\n    msg.payload = datosProcessados;\n    // Guardamos una copia en originalData para recuperarla después\n    msg.originalData = datosProcessados;\n    msg.status = 'success';\n} catch (error) {\n    let datosError = {\n        error: true,\n        mensaje: error.message,\n        datosOriginales: content,\n        id_Telegram: chatId\n    };\n    msg.payload = datosError;\n    msg.originalData = datosError;\n    msg.status = 'error';\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 900,
        "wires": [
            [
                "9b99b1c91eec7b57"
            ]
        ]
    },
    {
        "id": "0cc7d4a4f7d3c716",
        "type": "telegram sender",
        "z": "1f5375476a453e73",
        "name": "Notifica el error",
        "bot": "dd1eda5eaf1864d8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1540,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "2cdc53a4091e47b6",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "En caso de escribir mal el registro",
        "func": "let mensaje = \"*\" + msg.payload.mensaje + \"*\\r\\n\" +\n\"*Enviar el mensaje de la siguiente manera:*\\r\\n\" +\n\"Pedro\\r\\n\" +\n\"Sanchez\\r\\n\" +\n\"Rodriguez\\r\\n\" +\n\"A\\r\\n\" +\n\"302\";\nlet id = msg.payload.id_Telegram;\n\nmsg.payload = {\n    chatId : id, \n    type : \"message\", \n    content : mensaje\n};\n\nmsg.payload.options = {\n    disable_web_page_preview : true, \n    parse_mode : \"Markdown\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 840,
        "wires": [
            [
                "0cc7d4a4f7d3c716"
            ]
        ]
    },
    {
        "id": "9b99b1c91eec7b57",
        "type": "switch",
        "z": "1f5375476a453e73",
        "name": "",
        "property": "payload.error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 900,
        "wires": [
            [
                "2cdc53a4091e47b6"
            ],
            [
                "53689e59cc49dcc1"
            ]
        ]
    },
    {
        "id": "5398efa62b497e9e",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Mensaje de que se guardó en la base de datos",
        "func": "let mensaje = \"*Datos registrados en la base de datos*\";\n\n\nlet id = msg.originalData.id_Telegram;\n\nmsg.payload = {\n    chatId : id, \n    type : \"message\", \n    content : mensaje\n};\n\nmsg.payload.options = {\n    disable_web_page_preview : true, \n    parse_mode : \"Markdown\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 900,
        "wires": [
            [
                "63c862e0407d04d4"
            ]
        ]
    },
    {
        "id": "63c862e0407d04d4",
        "type": "telegram sender",
        "z": "1f5375476a453e73",
        "name": "",
        "bot": "dd1eda5eaf1864d8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2990,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "53689e59cc49dcc1",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Consulta en la BD si el usuario existe",
        "func": "msg.topic = \"Select * FROM usuarios WHERE id_telegram =\" + \nmsg.payload.id_Telegram + \";\";\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 960,
        "wires": [
            [
                "821b6a8ee11c0bfa"
            ]
        ]
    },
    {
        "id": "e59ff11ee85324a0",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Agrega usuario a la base de datos",
        "func": "msg.topic = \"INSERT INTO usuarios (nombre, apellido_paterno, apellido_materno, edificio, cubiculo, id_telegram) \" +\n    \"VALUES('\" + msg.originalData.nombre  + \"','\" +\n    msg.originalData.apellidoPaterno + \"','\" +\n    msg.originalData.apellidoMaterno + \"','\" +\n    msg.originalData.edificio + \"',\" +\n    msg.originalData.cubiculo + \",\" +\n    msg.originalData.id_Telegram + \");\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 900,
        "wires": [
            [
                "33722d0e8ea303ab"
            ]
        ]
    },
    {
        "id": "821b6a8ee11c0bfa",
        "type": "mysql",
        "z": "1f5375476a453e73",
        "mydb": "90c65bddbbb527c7",
        "name": "",
        "x": 1530,
        "y": 960,
        "wires": [
            [
                "6719fe0ba377990e"
            ]
        ]
    },
    {
        "id": "6719fe0ba377990e",
        "type": "switch",
        "z": "1f5375476a453e73",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 960,
        "wires": [
            [
                "e59ff11ee85324a0"
            ],
            [
                "e83bfdb51ca34710"
            ]
        ]
    },
    {
        "id": "e83bfdb51ca34710",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Mensaje de que el usuario ya está registrado",
        "func": "let id = msg.originalData.id_Telegram;\nlet mensaje\n\nif(msg.payload[0].nombre == msg.originalData.nombre && \n    msg.payload[0].apellido_paterno == msg.originalData.apellidoPaterno &&\n    msg.payload[0].apellido_materno == msg.originalData.apellidoMaterno){\n    mensaje = \"*Usuario ya registrado*\\r\\n\" +\n    \"En caso de querer borrar su registro seleccione **/borrar**\";\n}else{\n    mensaje = \"*Favor de registrarse desde otro dispositivo*\\r\\n\" +\n    \"En caso de querer borrar el registro seleccione **/borrar**\";\n}\n\nmsg.payload = {\n    chatId: id,\n    type: \"message\",\n    content: mensaje\n};\n\nmsg.payload.options = {\n    disable_web_page_preview: true,\n    parse_mode: \"Markdown\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2050,
        "y": 1020,
        "wires": [
            [
                "2d41defcc662f91d"
            ]
        ]
    },
    {
        "id": "2d41defcc662f91d",
        "type": "telegram sender",
        "z": "1f5375476a453e73",
        "name": "Notifica que el usuario ya existe",
        "bot": "dd1eda5eaf1864d8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2410,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "33722d0e8ea303ab",
        "type": "mysql",
        "z": "1f5375476a453e73",
        "mydb": "90c65bddbbb527c7",
        "name": "",
        "x": 2310,
        "y": 900,
        "wires": [
            [
                "5398efa62b497e9e"
            ]
        ]
    },
    {
        "id": "46e7c507468e84e1",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Consulta en la BD si el usuario existe",
        "func": "let chatId = msg.payload.chatId;\nmsg.id_telegram = chatId;\nmsg.topic = \"Select * FROM usuarios WHERE id_telegram =\" + chatId + \";\";\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 600,
        "wires": [
            [
                "748fe4475fd82f56"
            ]
        ]
    },
    {
        "id": "748fe4475fd82f56",
        "type": "mysql",
        "z": "1f5375476a453e73",
        "mydb": "90c65bddbbb527c7",
        "name": "",
        "x": 1130,
        "y": 600,
        "wires": [
            [
                "1684c14e9f15f224"
            ]
        ]
    },
    {
        "id": "1684c14e9f15f224",
        "type": "switch",
        "z": "1f5375476a453e73",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1350,
        "y": 600,
        "wires": [
            [
                "e1763466877508c4"
            ],
            [
                "fa0ec6c08b83cbb2"
            ]
        ]
    },
    {
        "id": "e1763466877508c4",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "Mensaje de que el usuario ya está registrado",
        "func": "let mensaje = \"*Usuario no registrado*\\r\\n\" +\n\"*Enviar el mensaje de la siguiente manera para registrarse:*\\r\\n\" +\n\"Pedro\\r\\n\" +\n\"Sanchez\\r\\n\" +\n\"Rodriguez\\r\\n\" +\n\"A\\r\\n\" +\n\"302\";\n\nlet id = msg.id_telegram\n\nmsg.payload = {\n    chatId: id,\n    type: \"message\",\n    content: mensaje\n};\n\nmsg.payload.options = {\n    disable_web_page_preview: true,\n    parse_mode: \"Markdown\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 500,
        "wires": [
            [
                "4be3174dea7fb112"
            ]
        ]
    },
    {
        "id": "4be3174dea7fb112",
        "type": "telegram sender",
        "z": "1f5375476a453e73",
        "name": "Notifica que el usuario ya existe",
        "bot": "dd1eda5eaf1864d8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2150,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "fa0ec6c08b83cbb2",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "function 7",
        "func": "msg.topic = \"DELETE FROM usuarios WHERE id_telegram =\" + \nmsg.payload[0].id_telegram + \";\";\n\nlet busquedaSQL = {\n    nombre: msg.payload[0].nombre,\n    apellidoPaterno: msg.payload[0].apellido_paterno,\n    apellidoMaterno: msg.payload[0].apellido_materno,\n    id_Telegram: msg.payload[0].id_telegram\n};\n\nmsg.datosSQL = busquedaSQL;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 680,
        "wires": [
            [
                "85c965b360ced8cd"
            ]
        ]
    },
    {
        "id": "85c965b360ced8cd",
        "type": "mysql",
        "z": "1f5375476a453e73",
        "mydb": "90c65bddbbb527c7",
        "name": "",
        "x": 1810,
        "y": 680,
        "wires": [
            [
                "91e5c0e8cd2df357"
            ]
        ]
    },
    {
        "id": "91e5c0e8cd2df357",
        "type": "function",
        "z": "1f5375476a453e73",
        "name": "function 8",
        "func": "let mensaje = \"El usuario *\" +\nmsg.datosSQL.nombre + \" \" +\nmsg.datosSQL.apellidoPaterno + \" \" +\nmsg.datosSQL.apellidoMaterno + \" \" +\n\"* fue eliminado\";\nlet id = msg.datosSQL.id_Telegram;\n\nmsg.payload = {\n    chatId: id,\n    type: \"message\",\n    content: mensaje\n};\n\nmsg.payload.options = {\n    disable_web_page_preview: true,\n    parse_mode: \"Markdown\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 680,
        "wires": [
            [
                "81512eee79c4acd9"
            ]
        ]
    },
    {
        "id": "81512eee79c4acd9",
        "type": "telegram sender",
        "z": "1f5375476a453e73",
        "name": "Notifica que el usuario ya existe",
        "bot": "dd1eda5eaf1864d8",
        "haserroroutput": false,
        "outputs": 1,
        "x": 2410,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ece408d79f66033e",
        "type": "debug",
        "z": "1f5375476a453e73",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 440,
        "wires": []
    },
    {
        "id": "dd1eda5eaf1864d8",
        "type": "telegram bot",
        "botname": "Lab_IoT_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "addressfamily": "",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "90c65bddbbb527c7",
        "type": "MySQLdatabase",
        "name": "BD telegram",
        "host": "10.213.1.206",
        "port": "3306",
        "db": "sistema_usuarios",
        "tz": "",
        "charset": "UTF8"
    }
]